/*
Blockchain Indexer API

The **Maestro Blockchain Indexer API** follows the [REST](https://restfulapi.net/) paradigm. To interact with Mapi, please  head over to [Dashboards](https://dashboard.gomaestro.org), create an API project, and copy its associated long-lived API key into your request header.  Your Mapi project is rate-limited based on your API package tier. Please see the available [Packages](https://dashboard.gomaestro.org/pricing) for more details or to upgrade your plan.  Example `GET` request for retrieving the chain tip: ``` curl -X GET --header \"api-key: <your_project_api_key>\" https://mainnet.gomaestro-api.org/v0/chain-tip ```  Example `POST` request for submitting a transaction: ``` curl -X POST --header \"Content-Type: application/cbor\" --header \"api-key: <your_project_api_key>\" --data @tx.signed https://mainnet.gomaestro-api.org/v0/transactions ```

API version: V0
Contact: info@gomaestro.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package maestro

import (
	"encoding/json"
)

// checks if the AccountUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountUpdate{}

// AccountUpdate Stake account related update
type AccountUpdate struct {
	// Absolute slot of the block which contained the transaction
	AbsSlot int32 `json:"abs_slot"`
	Action AccountAction `json:"action"`
	// Epoch number in which the transaction occured
	EpochNo int32 `json:"epoch_no"`
	// Transaction hash of the transaction which performed the action
	TxHash string `json:"tx_hash"`
}

// NewAccountUpdate instantiates a new AccountUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountUpdate(absSlot int32, action AccountAction, epochNo int32, txHash string) *AccountUpdate {
	this := AccountUpdate{}
	this.AbsSlot = absSlot
	this.Action = action
	this.EpochNo = epochNo
	this.TxHash = txHash
	return &this
}

// NewAccountUpdateWithDefaults instantiates a new AccountUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountUpdateWithDefaults() *AccountUpdate {
	this := AccountUpdate{}
	return &this
}

// GetAbsSlot returns the AbsSlot field value
func (o *AccountUpdate) GetAbsSlot() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AbsSlot
}

// GetAbsSlotOk returns a tuple with the AbsSlot field value
// and a boolean to check if the value has been set.
func (o *AccountUpdate) GetAbsSlotOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AbsSlot, true
}

// SetAbsSlot sets field value
func (o *AccountUpdate) SetAbsSlot(v int32) {
	o.AbsSlot = v
}

// GetAction returns the Action field value
func (o *AccountUpdate) GetAction() AccountAction {
	if o == nil {
		var ret AccountAction
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *AccountUpdate) GetActionOk() (*AccountAction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *AccountUpdate) SetAction(v AccountAction) {
	o.Action = v
}

// GetEpochNo returns the EpochNo field value
func (o *AccountUpdate) GetEpochNo() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EpochNo
}

// GetEpochNoOk returns a tuple with the EpochNo field value
// and a boolean to check if the value has been set.
func (o *AccountUpdate) GetEpochNoOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EpochNo, true
}

// SetEpochNo sets field value
func (o *AccountUpdate) SetEpochNo(v int32) {
	o.EpochNo = v
}

// GetTxHash returns the TxHash field value
func (o *AccountUpdate) GetTxHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TxHash
}

// GetTxHashOk returns a tuple with the TxHash field value
// and a boolean to check if the value has been set.
func (o *AccountUpdate) GetTxHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TxHash, true
}

// SetTxHash sets field value
func (o *AccountUpdate) SetTxHash(v string) {
	o.TxHash = v
}

func (o AccountUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["abs_slot"] = o.AbsSlot
	toSerialize["action"] = o.Action
	toSerialize["epoch_no"] = o.EpochNo
	toSerialize["tx_hash"] = o.TxHash
	return toSerialize, nil
}

type NullableAccountUpdate struct {
	value *AccountUpdate
	isSet bool
}

func (v NullableAccountUpdate) Get() *AccountUpdate {
	return v.value
}

func (v *NullableAccountUpdate) Set(val *AccountUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountUpdate(val *AccountUpdate) *NullableAccountUpdate {
	return &NullableAccountUpdate{value: val, isSet: true}
}

func (v NullableAccountUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


