/*
Blockchain Indexer API

The **Maestro Blockchain Indexer API** follows the [REST](https://restfulapi.net/) paradigm. To interact with Mapi, please  head over to [Dashboards](https://dashboard.gomaestro.org), create an API project, and copy its associated long-lived API key into your request header.  Your Mapi project is rate-limited based on your API package tier. Please see the available [Packages](https://dashboard.gomaestro.org/pricing) for more details or to upgrade your plan.  Example `GET` request for retrieving the chain tip: ``` curl -X GET --header \"api-key: <your_project_api_key>\" https://mainnet.gomaestro-api.org/v0/chain-tip ```  Example `POST` request for submitting a transaction: ``` curl -X POST --header \"Content-Type: application/cbor\" --header \"api-key: <your_project_api_key>\" --data @tx.signed https://mainnet.gomaestro-api.org/v0/transactions ```

API version: V0
Contact: info@gomaestro.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AssetInPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssetInPolicy{}

// AssetInPolicy Asset of a specific policy
type AssetInPolicy struct {
	// Hex encoded asset name
	Name string `json:"name"`
	// Amount of the asset
	Quantity int64 `json:"quantity"`
}

// NewAssetInPolicy instantiates a new AssetInPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetInPolicy(name string, quantity int64) *AssetInPolicy {
	this := AssetInPolicy{}
	this.Name = name
	this.Quantity = quantity
	return &this
}

// NewAssetInPolicyWithDefaults instantiates a new AssetInPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetInPolicyWithDefaults() *AssetInPolicy {
	this := AssetInPolicy{}
	return &this
}

// GetName returns the Name field value
func (o *AssetInPolicy) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AssetInPolicy) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AssetInPolicy) SetName(v string) {
	o.Name = v
}

// GetQuantity returns the Quantity field value
func (o *AssetInPolicy) GetQuantity() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *AssetInPolicy) GetQuantityOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *AssetInPolicy) SetQuantity(v int64) {
	o.Quantity = v
}

func (o AssetInPolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssetInPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["quantity"] = o.Quantity
	return toSerialize, nil
}

type NullableAssetInPolicy struct {
	value *AssetInPolicy
	isSet bool
}

func (v NullableAssetInPolicy) Get() *AssetInPolicy {
	return v.value
}

func (v *NullableAssetInPolicy) Set(val *AssetInPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetInPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetInPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetInPolicy(val *AssetInPolicy) *NullableAssetInPolicy {
	return &NullableAssetInPolicy{value: val, isSet: true}
}

func (v NullableAssetInPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetInPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


