/*
Blockchain Indexer API

The **Maestro Blockchain Indexer API** follows the [REST](https://restfulapi.net/) paradigm. To interact with Mapi, please  head over to [Dashboards](https://dashboard.gomaestro.org), create an API project, and copy its associated long-lived API key into your request header.  Your Mapi project is rate-limited based on your API package tier. Please see the available [Packages](https://dashboard.gomaestro.org/pricing) for more details or to upgrade your plan.  Example `GET` request for retrieving the chain tip: ``` curl -X GET --header \"api-key: <your_project_api_key>\" https://mainnet.gomaestro-api.org/v0/chain-tip ```  Example `POST` request for submitting a transaction: ``` curl -X POST --header \"Content-Type: application/cbor\" --header \"api-key: <your_project_api_key>\" --data @tx.signed https://mainnet.gomaestro-api.org/v0/transactions ```

API version: V0
Contact: info@gomaestro.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package maestro

import (
	"encoding/json"
)

// checks if the WdrlRedeemer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WdrlRedeemer{}

// WdrlRedeemer struct for WdrlRedeemer
type WdrlRedeemer struct {
	Data Datum `json:"data"`
	ExUnits int64 `json:"ex_units"`
	StakeAddress string `json:"stake_address"`
}

// NewWdrlRedeemer instantiates a new WdrlRedeemer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWdrlRedeemer(data Datum, exUnits int64, stakeAddress string) *WdrlRedeemer {
	this := WdrlRedeemer{}
	this.Data = data
	this.ExUnits = exUnits
	this.StakeAddress = stakeAddress
	return &this
}

// NewWdrlRedeemerWithDefaults instantiates a new WdrlRedeemer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWdrlRedeemerWithDefaults() *WdrlRedeemer {
	this := WdrlRedeemer{}
	return &this
}

// GetData returns the Data field value
func (o *WdrlRedeemer) GetData() Datum {
	if o == nil {
		var ret Datum
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *WdrlRedeemer) GetDataOk() (*Datum, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *WdrlRedeemer) SetData(v Datum) {
	o.Data = v
}

// GetExUnits returns the ExUnits field value
func (o *WdrlRedeemer) GetExUnits() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ExUnits
}

// GetExUnitsOk returns a tuple with the ExUnits field value
// and a boolean to check if the value has been set.
func (o *WdrlRedeemer) GetExUnitsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExUnits, true
}

// SetExUnits sets field value
func (o *WdrlRedeemer) SetExUnits(v int64) {
	o.ExUnits = v
}

// GetStakeAddress returns the StakeAddress field value
func (o *WdrlRedeemer) GetStakeAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StakeAddress
}

// GetStakeAddressOk returns a tuple with the StakeAddress field value
// and a boolean to check if the value has been set.
func (o *WdrlRedeemer) GetStakeAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StakeAddress, true
}

// SetStakeAddress sets field value
func (o *WdrlRedeemer) SetStakeAddress(v string) {
	o.StakeAddress = v
}

func (o WdrlRedeemer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WdrlRedeemer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	toSerialize["ex_units"] = o.ExUnits
	toSerialize["stake_address"] = o.StakeAddress
	return toSerialize, nil
}

type NullableWdrlRedeemer struct {
	value *WdrlRedeemer
	isSet bool
}

func (v NullableWdrlRedeemer) Get() *WdrlRedeemer {
	return v.value
}

func (v *NullableWdrlRedeemer) Set(val *WdrlRedeemer) {
	v.value = val
	v.isSet = true
}

func (v NullableWdrlRedeemer) IsSet() bool {
	return v.isSet
}

func (v *NullableWdrlRedeemer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWdrlRedeemer(val *WdrlRedeemer) *NullableWdrlRedeemer {
	return &NullableWdrlRedeemer{value: val, isSet: true}
}

func (v NullableWdrlRedeemer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWdrlRedeemer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


